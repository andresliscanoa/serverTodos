openapi: "3.0.0"
info:
  version: 1.0.0
  title: RestFul API docs
  description: API docs for ToDo application
  contact:
    name: Andr√©s Leonardo Liscano
    email: andresliscanoa@gmail.com
  license:
    name: Public
externalDocs:
  description: Source Code
  url: https://github.com/andresliscanoa/serverTodos
host: localhost:3000
servers:
  - url: http://localhost:3000/api
    description: Local server
  - url: https://server-todos.herokuapp.com/api
    description: Test server
basePath: ''
produces: application/json
tags:
  - name: Admin
    description: Crud for ADMIN User
  - name: Category
    description: Todos Category CRUD
  - name: Roles
    description: Roles CRUD
  - name: Todos
    description: Todos CRUD
  - name: Users
paths:
  ########## USERS ##########
  /users/sing/in:
    post:
      tags:
        - Users
      summary: Authentication method
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: email@email.com
                password: password
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          name:
                            type: object
                            properties:
                              first:
                                type: string
                              last:
                                type: string
                          lastname:
                            type: object
                            properties:
                              first:
                                type: string
                              last:
                                type: string
                          email:
                            type: string
                          rol:
                            type: object
                            properties:
                              _id:
                                type: string
                              name:
                                type: string
                      token:
                        type: string
                example:
                  status: success
                  message: User authorized
                  response:
                    user:
                      name:
                        first: name
                      lastname:
                        first: lastname
                      email: email@email.com
                      rol:
                        _id: 5f2f7389899672386846c567
                        name: rol
                    token: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        500:
          description: INTERNAL SERVER ERROR
  /users/{id}:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Users
      summary: Find user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: User ID
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                  lastname:
                    type: object
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                  email:
                    type: string
                  rol:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                example:
                  name:
                    first: name
                    last:
                  lastname:
                    first: lastname
                    last:
                  email: email@email.com
                  rol:
                    _id: 5f2f7389899672386846c555
                    name: USERS
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
    put:
      security:
        - apiKey: [ ]
      tags:
        - Admin
      summary: Update user information by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  properties:
                    first:
                      type: string
                    last:
                      type: string
                lastname:
                  type: object
                  properties:
                    first:
                      type: string
                    last:
                      type: string
                email:
                  type: string
                rol:
                  type: string
              example:
                name:
                  first: username
                lastname:
                  first: lastname
                email: email@email.com
                rol: 5f2f7389899672386846c555
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: User updated successfully
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error | Data does not match our records
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  /users/unique/email:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Admin
      summary: Check if the email provided is unique
      parameters:
        - in: query
          name: value
          schema:
            type: string
          required: true
          description: Email to check
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: Available value | Duplicate value
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  /users:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Admin
      summary: Find all users
      parameters:
        - in: query
          name: items
          schema:
            type: number
            minimun: 10
            maximun: 100
          required: true
          description: Number of items to return per page
        - in: query
          name: page
          schema:
            type: number
            minimun: 1
          required: true
          description: Current page
        - in: query
          name: page
          schema:
            type: number
            minimun: 1
          required: true
          description: Page number
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                    properties:
                      pagination:
                        type: object
                        properties:
                          total:
                            type: number
                          perPage:
                            type: number
                          pages:
                            type: number
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            name:
                              type: object
                              properties:
                                first:
                                  type: string
                                last:
                                  type: string
                            lastname:
                              type: object
                              properties:
                                fisrt:
                                  type: string
                                last:
                                  type: string
                            email:
                              type: string
                            rol:
                              type: object
                              properties:
                                _id:
                                  type: string
                                name:
                                  type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                example:
                  status: success
                  message: Users list
                  response:
                    pagination:
                      total: 150
                      perPage: 10
                      pages: 15
                    data:
                      - _id: 5f2f7389899672386846c555
                        name:
                          first: name
                          last:
                        lastname:
                          first: lastname
                          last:
                        email: email@email.com
                        rol:
                          _id: 5f2f7389899672386846c556
                          name: USERS
                        created_at: 2020-10-10 18:04:25
                        updated_at: 2020-10-11 18:04:25
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
    post:
      security:
        - apiKey: [ ]
      tags:
        - Admin
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  properties:
                    first:
                      type: string
                      required: true
                    last:
                      type: string
                lastname:
                  type: object
                  properties:
                    first:
                      type: string
                      required: true
                    last:
                      type: string
                email:
                  type: string
                password:
                  type: string
                rol:
                  type: string
            example:
              name:
                first: username
              lastname:
                first: lastname
              email: email@email.com
              password: password1
              rol: 5f2f7389899672386846c555
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: User created successfully
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  /users/set/password:
    put:
      security:
        - apiKey: [ ]
      tags:
        - Admin
      summary: Update user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                password:
                  type: string
              example:
                id: 5f2f7389899672386846c555
                password: newpassword2
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: Password updated successfully
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  /users/set/rol:
    put:
      security:
        - apiKey: [ ]
      tags:
        - Admin
      summary: Update user rol
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                rol:
                  type: string
              example:
                id: 5f2f7389899672386846c555
                password: 5f2f7389899672386846c556
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: Rol updated successfully
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  ##########################
  ########## CATEGORY ##########
  /categories/unique/name:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Category
      summary: Check is Category's name already exists
      parameters:
        - in: query
          name: value
          schema:
            type: string
          required: true
          description: Name to check
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: Available value | Duplicate value
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  /categories/name:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Category
      summary: Find all categories by name
      parameters:
        - in: query
          name: search
          schema:
            type: string
          required: true
          description: Value to find
        - in: query
          name: items
          schema:
            type: number
            minimun: 10
            maximun: 100
          required: true
          description: Quantity of items to return per page
        - in: query
          name: page
          schema:
            type: number
            minimun: 1
          required: true
          description: Actual page
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                    properties:
                      pagination:
                        type: object
                        properties:
                          total:
                            type: number
                          perPage:
                            type: number
                          pages:
                            type: number
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            name:
                              type: string
                            status:
                              type: boolean
                            created_at:
                              type: string
                            updated_at:
                              type: string
                example:
                  status: success
                  message: Categories list by name
                  response:
                    pagination:
                      total: 150
                      perPage: 10
                      pages: 15
                    data:
                      - _id: 5f2f7389899672386846c555
                        name: categoryOne
                        status: true
                        created_at: 2020-10-10 18:04:25
                        updated_at: 2020-10-11 18:04:25
                      - _id: 5f2f7389899672386846c555
                        name: categoryTwo
                        status: true
                        created_at: 2020-10-10 18:04:25
                        updated_at: 2020-10-11 18:04:25
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  /categories:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Category
      summary: Return a list of all categories created
      parameters:
        - in: query
          name: items
          schema:
            type: number
            minimun: 10
            maximun: 100
          required: true
          description: Quantity of items to return per page
        - in: query
          name: page
          schema:
            type: number
            minimun: 1
          required: true
          description: Actual page
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                    properties:
                      pagination:
                        type: object
                        properties:
                          total:
                            type: number
                          perPage:
                            type: number
                          pages:
                            type: number
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            name:
                              type: string
                            status:
                              type: boolean
                            created_at:
                              type: string
                            updated_at:
                              type: string
                example:
                  status: success
                  message: Categories list
                  response:
                    pagination:
                      total: 150
                      perPage: 10
                      pages: 15
                    data:
                      - _id: 5f2f7389899672386846c555
                        name: categoryOne
                        status: true
                        created_at: 2020-10-10 18:04:25
                        updated_at: 2020-10-11 18:04:25
                      - _id: 5f2f7389899672386846c555
                        name: categoryTwo
                        status: true
                        created_at: 2020-10-10 18:04:25
                        updated_at: 2020-10-11 18:04:25
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
    post:
      security:
        - apiKey: [ ]
      tags:
        - Category
      summary: Create a new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              example:
                name: categoryOne
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: Category created successfully
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
    put:
      security:
        - apiKey: [ ]
      tags:
        - Category
      summary: Update a category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                status:
                  type: boolean
              example:
                id: 5f2f7389899672386846c558
                name: categoryUpdated
                status: true
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: Category updated successfully
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  /categories/status:
    put:
      security:
        - apiKey: [ ]
      tags:
        - Category
      summary: Update a category status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                status:
                  type: boolean
              example:
                id: 5f2f7389899672386846c558
                status: false
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: Category updated successfully
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  ##############################
  ########## ROLES ##########
  /roles:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Roles
      summary: List all roles created
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: array
                    items:
                      schema:
                        type: object
                        properties:
                          _id:
                            type: string
                          name:
                            type: string
                          status:
                            type: boolean
                example:
                  status: success
                  message: Roles list
                  response:
                    - _id: 5f2f7389899672386846c558
                      name: admin
                      status: true
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  ###########################
  ########## TODOS ##########
  /todos/dash:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Todos
      summary: Return total number of ToDo by status
      parameters:
        - in: query
          name: user
          required: true
          schema:
            type: String
          description: User ID
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        count:
                          type: number
                example:
                  status: success
                  message: Categories list
                  response:
                    - _id: StatusOne
                      count: 10
                    - id: StatusTwo
                      count: 5
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  /todos:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Todos
      summary: Get Todos by filters
      parameters:
        - in: query
          name: items
          required: true
          schema:
            type: number
            minimun: 10
            maximun: 100
          description: Quantity of items to return per page
        - in: query
          name: page
          required: true
          schema:
            type: number
            minimun: 1
          description: Current page
        - in: query
          name: user
          schema:
            type: string
          description: User ID [If user is ADMIN then is not required]
        - in: query
          name: category
          schema:
            type: string
          description: Category ID
        - in: query
          name: status
          schema:
            type: string
          description: Todo status [Pending, Overdue, Finished]
        - in: query
          name: start
          schema:
            type: string
          description: Start date to filter [YYYY-MM-DD]
        - in: query
          name: end
          schema:
            type: string
          description: End date to filter [YYYY-MM-DD]
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                    properties:
                      pagination:
                        type: object
                        properties:
                          total:
                            type: number
                          perPage:
                            type: number
                          pages:
                            type: number
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            title:
                              type: string
                            description:
                              type: string
                            category:
                              type: object
                              properties:
                                _id:
                                  type: string
                                name:
                                  type: string
                            start:
                              type: string
                            deadline:
                              type: string
                            status:
                              type: string
                            user:
                              type: object
                              properties:
                                _id:
                                  type: string
                                email:
                                  type: string
                            created_at:
                              type: string
                            updated_at:
                              type: string
                example:
                  status: success
                  message: Categories list
                  response:
                    pagination:
                      total: 150
                      perPage: 10
                      pages: 15
                    data:
                      - _id: 5f2f7389899672386846c555
                        title: todoOne
                        description: descriptionOne
                        category:
                          _id: 5f2f7389899672386846c550
                          name: categoryOne
                        status: Pending
                        start: 2020-10-11 21:05:20
                        deadline: 2020-10-15 12:00:00
                        user:
                          _id: 5f2f7389899672386846c560
                          email: email@email.com
                        created_at: 2020-10-10 18:04:25
                        updated_at: 2020-10-11 18:04:25
                      - _id: 5f2f7389899672386846c555
                        title: todoOne
                        category:
                          _id: 5f2f7389899672386846c550
                          name: categoryOne
                        status: Finished
                        user:
                          _id: 5f2f7389899672386846c560
                          email: email@email.com
                        created_at: 2020-10-10 18:04:25
                        updated_at: 2020-10-11 18:04:25
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
    post:
      security:
        - apiKey: [ ]
      tags:
        - Todos
      summary: Create a todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                category:
                  type: string
                start:
                  type: string
                deadline:
                  type: string
                status:
                  type: string
              example:
                title: Todo One
                description: OPTIONAL
                category: 5f2f7389899672386846c566
                start: OPTIONAL - YYYY-MM-DD HH:MM:SS
                deadline: OPTIONAL - YYYY-MM-DD HH:MM:SS
                status: OPTIONAL - [Pending*, Overdue, Finished]
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: Todo created successfully
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
    put:
      security:
        - apiKey: [ ]
      tags:
        - Todos
      summary: Update a todo by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                title:
                  type: string
                description:
                  type: string
                category:
                  type: string
                start:
                  type: string
                deadline:
                  type: string
                status:
                  type: string
              example:
                id: 5f2f7389899672386846c551
                title: Todo Updated
                description: OPTIONAL
                category: 5f2f7389899672386846c510
                status: Finished
                start: OPTIONAL - YYYY-MM-DD HH:MM:SS
                deadline: OPTIONAL - YYYY-MM-DD HH:MM:SS
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: Todo updated successfully
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error | Data does not match our records
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
    delete:
      security:
        - apiKey: [ ]
      tags:
        - Todos
      summary: Delete a todo By Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
              example:
                id: 5f2f7389899672386846c568
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: Todo deleted successfully
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error | Data does not match our records
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  /todos/status:
    put:
      security:
        - apiKey: [ ]
      tags:
        - Todos
      summary: Update a todo status by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                status:
                  type: string
              example:
                id: 5f2f7389899672386846c567
                status: Overdue
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: success
                  message: Todo updated successfully
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  response:
                    type: object
                example:
                  status: error
                  message: Ops, something went wrong | The credentials are not correct | Data integrity error | Data does not match our records
                  response:
        401:
          description: UNATHORIZED ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Unathorized access
        403:
          description: FORBIDDEN ACCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: error
                  message: Forbidden access
        500:
          description: INTERNAL SERVER ERROR
  ###########################
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: Authorization
